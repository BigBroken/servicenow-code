<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_8821_code.Utils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>Utils</name>
        <script><![CDATA[var Utils = Class.create();
Utils.prototype = {
	initialize: function() {
	},
	search: function(sysid){
		var returnArr = [];
		if(sysid){
			try {
				var check;
				var tableName;
				var table = new GlideRecord('sys_db_object');
				//Make sure we're not looking at a ts (text Utils) table.
				//var query = 'name=sn_codesearch_table^';
				var query = '';
				query += 'sys_update_nameISNOTEMPTY^';
				//for(var i=0;i<excludeTables.length;i++){
				this.excludeTables.map(function(excludedTable){
					query += 'name!=' + excludedTable + '^';
				});
				query += 'nameISNOTEMPTY^';
				query += 'nameNOT LIKEts_^';
				query += 'nameNOT LIKEv_^';
				table.addEncodedQuery(query); 
				//gs.info(table.getEncodedQuery());
				table.query();
				while (table.next()) {
					tableName = table.getValue('name');
					check = new GlideRecord(tableName);
					check.addQuery('sys_id', sysid);
					check.query();
					if (check.hasNext()) {
						check.next();
						var url = gs.getProperty('glide.servlet.uri');
						url += tableName + '.do?sys_id=' + sysid;
						//gs.info(url);
						returnArr.push({
							url: url,
							displayValue: check.getDisplayValue() || "(empty)",
							table: tableName.toString()
						});
					}
				}
				return returnArr;
			} catch (error){
				gs.info(JSON.stringify(error,'','  '));
			}
		}
	},
	excludeTables: [
		'clone_log',
		'discovery_log',
		'global',
		'import_log',
		'plan_execution',
		'plan_mysql',
		'plan_oracle',
		'pa_job_log_rows',
		'sla_repair_log_entry',
		'sysevent',
		'syslog',
		'syslog_email',
		'syslog_cancellation',
		'syslog_transaction',
		'sys_attachment_doc',
		'sys_querystat',
		'sys_coalesce_strategy_deferred',
		'sys_export_set_log',
		'sys_email_log',
		'sys_geocoding_request',
		'sys_index_explain',
		'sys_metadata',
		'sys_rw_action',
		'sys_rw_amb_action',
		'sys_rollback_log',
		'sys_schema_change',
		'sys_storage_alias',
		'sys_storage_table_alias',
		'sys_table_partition',
		'sys_upgrade_blame',
		'sys_upgrade_history_log',
		'sys_update_version',
		'sys_user_session',
		'sys_user_token',
		'sys_user_token_network',
		'sys_upgrade_blame',
		'wf_log'
	],
	type: 'Utils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>jacebenson</sys_created_by>
        <sys_created_on>2019-03-28 07:31:58</sys_created_on>
        <sys_id>41859450db2833007d159235ca96191d</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>Utils</sys_name>
        <sys_package display_value="Code" source="x_8821_code">0f7b73c4dba433007d159235ca96197c</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Code">0f7b73c4dba433007d159235ca96197c</sys_scope>
        <sys_update_name>sys_script_include_41859450db2833007d159235ca96191d</sys_update_name>
        <sys_updated_by>jacebenson</sys_updated_by>
        <sys_updated_on>2019-05-09 22:44:22</sys_updated_on>
    </sys_script_include>
</record_update>
